import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React from "react";
import { BsArrowLeftShort, BsArrowReturnLeft } from "react-icons/bs";
import { Wrapper } from "styles/dynamic";
import { ITeam } from "type";
import { teamData } from "../../data";

interface Props {
  team: ITeam;
}

const Member = ({ team }: Props) => {
  const {
    ProfessionalBody,
    about,
    area,
    certifications,
    education,
    id,
    img,
    name,
  } = team;
  return (
    <Wrapper>
      <Head>
        <title>Lex Gateway</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/lex.ico" />
      </Head>

      <Link href="/team">
        <a className="back">
        <BsArrowLeftShort />  back
        </a>
      </Link>
      <div className="content">
        <div className="left">
          <div className="header">
            <Image
              src={img}
              height={400}
              width={300}
              alt={name}
              objectFit="cover"
              placeholder="blur"
              blurDataURL={img}
            />
            <h1>{name}</h1>
          </div>

          <div dangerouslySetInnerHTML={{ __html: area }} />
        </div>
        <div className="right">
          <label>About Me</label>
          <p>{about}</p>
          <label>Education</label>
          <p>{education}</p>

          <div dangerouslySetInnerHTML={{ __html: ProfessionalBody }} />
          <div dangerouslySetInnerHTML={{ __html: certifications }} />
        </div>
      </div>
    </Wrapper>
  );
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  if (!params) throw new Error("route id param is not defined");

  const members = teamData.filter(
    (member) => member.id.toString() === params.id
  );

  return {
    props: {
      team: members[0],
    },
  };
};

export const getStaticPaths = async () => {
  const paths = teamData.map((team) => ({
    params: { id: team.id.toString() },
  }));
  return { paths, fallback: false };
};

export default Member;
